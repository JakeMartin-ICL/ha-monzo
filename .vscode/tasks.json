{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Pytest",
            "type": "shell",
            "command": "python3 -m pytest --timeout=10 tests",
            "dependsOn": [
                "Install all Test Requirements"
            ],
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Pytest (changed tests only)",
            "type": "shell",
            "command": "python3 -m pytest --timeout=10 --picked",
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Ruff",
            "type": "shell",
            "command": "pre-commit run ruff --all-files",
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Pylint",
            "type": "shell",
            "command": "pylint homeassistant",
            "dependsOn": [
                "Install all Requirements"
            ],
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Code Coverage",
            "detail": "Generate code coverage report for a given integration.",
            "type": "shell",
            "command": "python3 -m pytest ./tests/components/${input:integrationName}/ --cov=homeassistant.components.${input:integrationName} --cov-report term-missing --durations-min=1 --durations=0 --numprocesses=auto",
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Install all Requirements",
            "type": "shell",
            "command": "uv pip install -r requirements.txt",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Install all Test Requirements",
            "type": "shell",
            "command": "uv pip install -r requirements_test.txt",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Compile English translations",
            "detail": "In order to test changes to translation files, the translation strings must be compiled into Home Assistant's translation directories.",
            "type": "shell",
            "command": "python3 -m script.translations develop --all",
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "Run scaffold",
            "detail": "Add new functionality to a integration using a scaffold.",
            "type": "shell",
            "command": "python3 -m script.scaffold ${input:scaffoldName} --integration ${input:integrationName}",
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "Create new integration",
            "detail": "Use the scaffold to create a new integration.",
            "type": "shell",
            "command": "python3 -m script.scaffold integration",
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "Install integration requirements",
            "detail": "Install all requirements of a given integration.",
            "type": "shell",
            "command": "${command:python.interpreterPath} -m script.install_integration_requirements ${input:integrationName}",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "reveal": "always",
                "panel": "new"
            }
        }
    ],
    "inputs": [
        {
            "id": "integrationName",
            "type": "promptString",
            "description": "For which integration should the task run?"
        }
    ]
}